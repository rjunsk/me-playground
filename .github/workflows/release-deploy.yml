name: Release and Deploy Minor/Patch Version

on:
  workflow_dispatch:
    inputs:
      extension-name:
        type: choice
        required: true
        description: Extension to Release
        options: 
        - audio-mixer
        - video-composer
      release-environment:
        type: choice
        required: true
        description: Release Environment
        options: 
        - Preview
        - Stable

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Set input as env variables
      run: |
        echo "extension_name=${{ github.event.inputs.extension-name }}" >> $GITHUB_ENV
        echo "release_type=${{ github.event.inputs.release-type }}" >> $GITHUB_ENV
        echo "release_environment=${{ github.event.inputs.release-environment }}" >> $GITHUB_ENV

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Send greeting
      run: |
        echo "${{ steps.extract_branch.outputs.branch }} | ${{ github.event.inputs.extension-name }} | ${{ github.event.inputs.release-type }} | ${{ github.event.inputs.release-environment }}"
        
    - uses: actions/checkout@v1
      
    - name: get version
      id: version
      uses: notiz-dev/github-action-json-property@release
      with: 
        path: '${{ github.event.inputs.extension-name }}/package.json'
        prop_path: 'version'
        
    - name: Set version to env
      run: echo "release_version=${{ steps.version.outputs.prop }}" >> $GITHUB_ENV
              
    - name: Beta Release Version Tag Name
      if: ${{ github.event.inputs.release-environment == 'Preview' }}
      run: echo "${{ github.event.inputs.extension-name }}-${{ steps.version.outputs.prop }}-beta"
        
#     - name: Perform beta release
#       id: beta-release
#       if: ${{ github.event.inputs.release-environment == 'Preview' }}
#       uses: actions/github-script@v6
#       with:
#         script: |
#           github.rest.repos.createRelease({
#             owner: context.repo.owner,
#             repo: context.repo.repo,
#             tag_name: "${{ github.event.inputs.extension-name }}-${{ steps.version.outputs.prop }}-beta",
#             name: "${{ github.event.inputs.extension-name }}-${{ steps.version.outputs.prop }}-beta",
#             prerelease: true,
#             generate_release_notes: true
#           });

#     - name: Stable Release Version Tag Name
#       if: ${{ github.event.inputs.release-environment == 'Preview' }}
#       run: echo "${{ github.event.inputs.extension-name }}-${{ steps.version.outputs.prop }}"
        
#     - name: Perform Stable release
#       id: stable-release
#       if: ${{ github.event.inputs.release-environment == 'Stable' }}
#       uses: actions/github-script@v6
#       with:
#         script: |
#           github.rest.repos.createRelease({
#             owner: context.repo.owner,
#             repo: context.repo.repo,
#             tag_name: "${{ github.event.inputs.extension-name }}-${{ steps.version.outputs.prop }}",
#             name: "${{ github.event.inputs.extension-name }}-${{ steps.version.outputs.prop }}",
#             prerelease: false,
#             generate_release_notes: true
#           });
          
    - name: Execute JS code
      uses: actions/github-script@v6
      id: set-result
      with:
        script: |
          const { extension_name, release_type, release_environment, release_version } = process.env;
          console.log("extensionName", extension_name);
          console.log("releaseType", release_type);
          console.log("releaseEnvironment", release_environment);
          console.log("releaseVersion", release_version);

          return release_environment == 'Preview' ? `${extension_name}-${release_version}-beta` : `${extension_name}-${release_version}`;
        result-encoding: string

    - name: Get result
      run: echo "${{steps.set-result.outputs.result}}"
